<!-- DarkTheme.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Base Colors -->
    <Color x:Key="PrimaryColor">#2D2D30</Color>
    <!-- Dark background -->
    <Color x:Key="SecondaryColor">#1E1E1E</Color>
    <!-- Even darker background -->
    <Color x:Key="AccentColor">#0078D7</Color>
    <!-- Blue accent color -->
    <Color x:Key="AccentDarkerColor">#005A9E</Color>
    <!-- Darker blue for hover -->
    <Color x:Key="AccentBrightColor">#1A86D9</Color>
    <!-- Brighter blue for hover -->
    <Color x:Key="TextPrimaryColor">#FFFFFF</Color>
    <!-- White text -->
    <Color x:Key="TextSecondaryColor">#BBBBBB</Color>
    <!-- Gray text -->
    <Color x:Key="CardBackgroundColor">#333337</Color>
    <!-- Card background -->
    <Color x:Key="CardBorderColor">#444444</Color>
    <!-- Card border -->
    <Color x:Key="BorderColor">#444444</Color>
    <!-- General borders -->
    <Color x:Key="PositiveColor">#4CAF50</Color>
    <!-- Green for positive states -->
    <Color x:Key="WarningColor">#FF9800</Color>
    <!-- Orange for warnings -->
    <Color x:Key="DangerColor">#FF5252</Color>
    <!-- Red for errors -->
    <Color x:Key="TabBackgroundColor">#252529</Color>
    <!-- Tab background -->
    <Color x:Key="InputBackgroundColor">#252529</Color>
    <!-- Input background -->
    <Color x:Key="SelectionColor">#0078D7</Color>
    <!-- Selection color -->

    <!-- Brushes -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}" />
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="AccentDarkerBrush" Color="{StaticResource AccentDarkerColor}" />
    <SolidColorBrush x:Key="AccentBrightBrush" Color="{StaticResource AccentBrightColor}" />
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}" />
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}" />
    <SolidColorBrush x:Key="CardBackgroundBrush" Color="{StaticResource CardBackgroundColor}" />
    <SolidColorBrush x:Key="CardBorderBrush" Color="{StaticResource CardBorderColor}" />
    <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}" />
    <SolidColorBrush x:Key="PositiveBrush" Color="{StaticResource PositiveColor}" />
    <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}" />
    <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}" />
    <SolidColorBrush x:Key="TabBackgroundBrush" Color="{StaticResource TabBackgroundColor}" />
    <SolidColorBrush x:Key="InputBackgroundBrush" Color="{StaticResource InputBackgroundColor}" />
    <SolidColorBrush x:Key="SelectionBrush" Color="{StaticResource SelectionColor}" />

    <!-- Modern button style -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="Padding" Value="15,8" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentDarkerBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentDarkerBrush}" />
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern navigation button style -->
    <Style x:Key="NavButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="20,12" />
        <Setter Property="Margin" Value="5,2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentBrightBrush}" TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource AccentDarkerBrush}" TargetName="border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Card style for panels -->
    <Style x:Key="CardPanel" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource CardBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" ShadowDepth="2" BlurRadius="5" Opacity="0.3" />
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for section titles -->
    <Style x:Key="SectionTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
    </Style>

    <!-- Style for stat numbers -->
    <Style x:Key="StatNumber" TargetType="TextBlock">
        <Setter Property="FontSize" Value="38" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,10,0,10" />
    </Style>

    <!-- DataGrid Styles -->
    <Style x:Key="DarkDataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource CardBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="RowHeaderWidth" Value="0" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AlternatingRowBackground" Value="#2D2D35" />
        <Setter Property="RowBackground" Value="#333337" />
        <Setter Property="ColumnHeaderHeight" Value="32" />
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="Padding" Value="10,8" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3E3E42" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="DarkTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="CaretBrush" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource AccentBrush}" />
        <Setter Property="SelectionOpacity" Value="0.5" />
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="4" />
            </Style>
        </Style.Resources>
    </Style>

    <!-- ScrollBar Style -->
    <Style x:Key="DarkScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <!-- TabControl Style -->
    <Style x:Key="DarkTabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="DarkTabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
        <Setter Property="Background" Value="{StaticResource TabBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="12,8" />
        <Setter Property="Margin" Value="0,0,4,0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
                <Setter Property="BorderThickness" Value="0,0,0,2" />
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}" />
                <Setter Property="Background" Value="#3E3E42" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3E3E42" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="DarkCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
    </Style>

    <!-- GroupBox Style -->
    <Style x:Key="DarkGroupBoxStyle" TargetType="GroupBox">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="Background" Value="#2A2A2E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Background="{StaticResource TabBackgroundBrush}"
                                BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="4,4,0,0" Padding="10,5">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                        </Border>
                        <Border Grid.Row="1" Background="{TemplateBinding Background}"
                                BorderThickness="1,0,1,1" BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0,0,4,4">
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Status Bar Style -->
    <Style x:Key="DarkStatusBarStyle" TargetType="StatusBar">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}" />
    </Style>

    <!-- Progress Bar Style -->
    <Style x:Key="DarkProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Background" Value="#444444" />
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="6" />
    </Style>

    <!-- Window Style -->
    <Style x:Key="DarkWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
    </Style>

    <!-- Page Style -->
    <Style x:Key="DarkPageStyle" TargetType="Page">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
    </Style>

    <!-- ListBox Style -->
    <Style x:Key="DarkListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <Style x:Key="DarkListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource AccentBrush}" />
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer Style -->
    <Style x:Key="DarkScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#252529" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Border Background="{TemplateBinding Background}"
							BorderBrush="#444444"
							BorderThickness="1"
							CornerRadius="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="30" />
                            </Grid.ColumnDefinitions>

                            <!-- Content -->
                            <ContentPresenter Grid.Column="0"
											  Margin="6,2,0,2"
											  VerticalAlignment="Center"
											  HorizontalAlignment="Left"
											  Content="{TemplateBinding SelectionBoxItem}"
											  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
											  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
											  IsHitTestVisible="False" />

                            <!-- Arrow Button -->
                            <ToggleButton Grid.Column="1"
										  Background="Transparent"
										  BorderThickness="0"
										  IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
										  Focusable="False"
										  ClickMode="Press">
                                <Path Data="M 0 0 L 4 4 L 8 0 Z"
									  Fill="White"
									  HorizontalAlignment="Center"
									  VerticalAlignment="Center" />
                            </ToggleButton>

                            <!-- Drop Down -->
                            <Popup Name="Popup"
								   Placement="Bottom"
								   IsOpen="{TemplateBinding IsDropDownOpen}"
								   AllowsTransparency="True"
								   Focusable="False"
								   PopupAnimation="Slide">
                                <Border Background="#252529"
										BorderBrush="#444444"
										BorderThickness="1"
										MaxHeight="200"
										SnapsToDevicePixels="True">
                                    <ScrollViewer Margin="4"
												  SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
													KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PasswordBox Style -->
    <Style x:Key="DarkPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="{StaticResource InputBackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,6" />
        <Setter Property="CaretBrush" Value="{StaticResource TextPrimaryBrush}" />
        <Setter Property="SelectionBrush" Value="{StaticResource AccentBrush}" />
    </Style>

    <!-- Override default styles -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource DarkTextBoxStyle}" />
    <Style TargetType="ComboBox" BasedOn="{StaticResource DarkComboBoxStyle}" />
    <Style TargetType="ScrollBar" BasedOn="{StaticResource DarkScrollBarStyle}" />
    <Style TargetType="TabControl" BasedOn="{StaticResource DarkTabControlStyle}" />
    <Style TargetType="TabItem" BasedOn="{StaticResource DarkTabItemStyle}" />
    <Style TargetType="CheckBox" BasedOn="{StaticResource DarkCheckBoxStyle}" />
    <Style TargetType="GroupBox" BasedOn="{StaticResource DarkGroupBoxStyle}" />
    <Style TargetType="StatusBar" BasedOn="{StaticResource DarkStatusBarStyle}" />
    <Style TargetType="ProgressBar" BasedOn="{StaticResource DarkProgressBarStyle}" />
    <Style TargetType="ListBox" BasedOn="{StaticResource DarkListBoxStyle}" />
    <Style TargetType="ListBoxItem" BasedOn="{StaticResource DarkListBoxItemStyle}" />
    <Style TargetType="ScrollViewer" BasedOn="{StaticResource DarkScrollViewerStyle}" />
    <Style TargetType="PasswordBox" BasedOn="{StaticResource DarkPasswordBoxStyle}" />
    <Style TargetType="DataGrid" BasedOn="{StaticResource DarkDataGridStyle}" />
    <!-- Add this to your DarkTheme.xaml file -->

    <!-- Override the default style to apply to all ComboBoxes -->

    <!-- ComboBoxItem Dark Theme -->
    <Style x:Key="DarkComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#1E1E1E" />
        <Setter Property="Foreground" Value="White" />
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="#0078D7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Override the default style to apply to all ComboBoxItems -->
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource DarkComboBoxItemStyle}" />
</ResourceDictionary>